<!DOCTYPE html>
<html>
<head>
    <title>TS-RTM2</title>
    <!--  (c) 2017 CA Technologies.  All Rights Reserved. -->
    <!--  Build Date: Tue Jun 06 2017 07:14:18 GMT-0600 (MDT) -->
    
    <script type="text/javascript">
        var APP_BUILD_DATE = "Tue Jun 06 2017 07:14:18 GMT-0600 (MDT)";
        var STORY    = "US1379";
        var BUILDER  = "corkr03";
        var CHECKSUM = 20072598534;
    </script>
    
    <script type="text/javascript" src="/apps/2.1/sdk.js"></script>
    <!-- our highcharts (needed so that we can add patterns) 
    <script type="text/javascript" src="/apps/2.1/lib/analytics/analytics-all.js"></script>
    -->
    
    
    <script type="text/javascript">
        Rally.onReady(function() {
            Ext.define("Rally.technicalservices.InfoLink",{extend:"Rally.ui.dialog.Dialog",alias:"widget.tsinfolink",informationHtml:null,title:"Build Information",defaults:{padding:5,margin:5},closable:!0,draggable:!0,autoShow:!0,width:350,informationalConfig:null,items:[{xtype:"container",itemId:"information"}],initComponent:function(){Ext.id(this);this.title="<span class='icon-help'> </span>"+this.title,this.callParent(arguments)},_generateChecksum:function(a){var b,c=305419896;for(a=a.replace(/var CHECKSUM = .*;/,""),a=a.replace(/var BUILDER  = .*;/,""),a=a.replace(/\s/g,""),b=0;b<a.length;b++)c+=a.charCodeAt(b)*b;return c},_checkChecksum:function(a){var b=Ext.create("Deft.Deferred"),c=this;return Ext.Ajax.request({url:document.URL,params:{id:1},success:function(a){if(text=a.responseText,CHECKSUM){var d=c._generateChecksum(text);if(CHECKSUM!==d)return void b.resolve(!1)}b.resolve(!0)}}),b.promise},_addToContainer:function(a){var b=Ext.apply({xtype:"container",height:200,overflowY:!0},this.informationalConfig);a.add(b)},afterRender:function(){var a=Rally.getApp();if(!Ext.isEmpty(this.informationalConfig)){var b=this.down("#information");this._addToContainer(b)}a.isExternal()?this.addDocked({xtype:"container",cls:"build-info",padding:2,dock:"bottom",html:"... Running externally"}):this._checkChecksum(a).then({scope:this,success:function(a){a||this.addDocked({xtype:"container",cls:"build-info",dock:"bottom",padding:2,html:'<span class="icon-warning"> </span>Checksums do not match'})},failure:function(a){console.log("oops:",a)}}),this.callParent(arguments)},beforeRender:function(){if(this.callParent(arguments),this.informationHtml&&this.addDocked({xtype:"component",componentCls:"intro-panel",padding:2,html:this.informationHtml,doc:"top"}),this.addDocked({xtype:"container",cls:"build-info",padding:2,dock:"bottom",html:"This app was created by the CA AC Technical Services Team."}),APP_BUILD_DATE){var a=Ext.String.format("Built on: {0} <br/>Built by: {1}",APP_BUILD_DATE,BUILDER);STORY&&(a=a+"<br/>Source story: "+STORY),this.addDocked({xtype:"container",cls:"build-info",padding:2,dock:"bottom",html:a})}}}),Ext.define("Rally.technicalservices.Logger",{constructor:function(a){Ext.apply(this,a)},log:function(a){var b="[ "+Ext.util.Format.date(new Date,"Y-m-d H:i:s.u")+" ]",c=[];c=Ext.Array.push(c,[b]),c=Ext.Array.push(c,Ext.Array.slice(arguments,0)),window.console&&console.log.apply(console,c)}}),Ext.define("RallyTechServices.RequirementsTracabilityMatrix.utils.exportConfiguration",{initiativeObjectIDs:[],portfolioItemTypes:null,initiativeFilter:null,extractFields:null,constructor:function(a){this.portfolioItemTypes=a.portfolioItemTypes,this.initiativeObjectIDs=a.initiativeObjectIDs,this.initiativeFilter=a.initiativeFilter,this.extractFields=a.extractFields},transformRecordsToExtract:function(a,b,c,d,e){for(var f={},g=0;g<a.length;g++){var h=a[g].get("ObjectID");f[h]=a[g].getData(),f[h]._kids=[]}for(var i={},g=0;g<b.length;g++){var j=b[g].getData();if(j._kids=[],i[j.ObjectID]=j,j.Parent){var k=j.Parent.ObjectID;f[k]&&f[k]._kids.push(j)}}for(var l={},g=0;g<c.length;g++){var m=c[g].getData();if(l[m.ObjectID]=m,m._kids=[],m._defectKids=[],m.PortfolioItem){var k=m.PortfolioItem.ObjectID;i[k]&&i[k]._kids.push(m)}else if(m.Feature){var k=m.Feature.ObjectID;i[k]&&i[k]._kids.push(m)}}for(var n={},g=0;g<d.length;g++){var o=d[g].getData();if(o._defectKids=[],n[o.ObjectID]=o,o.WorkProduct){var k=o.WorkProduct.ObjectID;l[k]&&l[k]._kids.push(o)}}for(var p={},g=0;g<e.length;g++){var q=e[g].getData();if(q._kids=[],p[q.ObjectID]=q,q.TestCase){var k=q.TestCase.ObjectID;n[k]&&n[k]._defectKids.push(q)}if(q.Requirement){var k=q.Requirement.ObjectID;l[k]&&l[k]._defectKids.push(q)}}for(var r=[],s=[],t=0;t<this.extractFields.length;t++)s.push(this.scrubCell(this.extractFields[t].text));r.push(s.join(","));var u=this.getFieldsFor("Initiative");return Ext.Object.each(f,function(a,b){s=[];for(var c=0;c<u.length;c++)s.push(this.scrubCell(b[u[c].dataIndex]));b._kids&&0!==b._kids.length||r.push(s.join(",")),r=Ext.Array.push(r,this._getChildRows(s,b,"Feature"))},this),r.join("\r\n")},_getKidsKey:function(a){var b="_kids";return"Defect"===a&&(b="_defectKids"),b},_getChildRows:function(a,b,c){var d=[],e=this._getKidsKey(c),f=b[e],g=this.getFieldsFor(c),h=[];return"Defect"===c&&"hierarchicalrequirement"===b._type&&(h=this.getFieldsFor("TestCase")),Ext.Array.each(f,function(b){for(var e=Ext.clone(a),f=0;f<h.length;f++)e.push("");for(var f=0;f<g.length;f++)e.push(this.scrubCell(b[g[f].dataIndex]));var i=this._getChildTypeFor(c);if(i){Ext.isArray(i)||(i=[i]);for(var j=!1,k=0;k<i.length;k++)rows=this._getChildRows(e,b,i[k]),rows.length>0&&(d=Ext.Array.push(d,rows),j=!0);j||d.push(e.join(","))}else d.push(e.join(","))},this),d},_getChildTypeFor:function(a){var b={Initiative:"Feature",Feature:"HierarchicalRequirement",HierarchicalRequirement:["Defect","TestCase"],TestCase:"Defect",Defect:null};return b[a]},scrubCell:function(a){if(!a)return"";Ext.isObject(a)&&(a=a._refObjectName),a=a.toString(),a=a.replace(/[\u2018\u2019]/g,"'").replace(/[\u201C\u201D]/g,'"').replace(/&rsquo;/,"'").replace(/&ldquo;/,'"').replace(/&rdquo;/,'"').replace(/&lsquo;/,"'");var b=new RegExp(',|"|\r|\n',"g"),c=new RegExp("</?[^>]+>","g"),d=new RegExp("&nbsp;","ig");return/<br\s?\/?>/.test(a)&&(a=a.replace(/<br\s?\/?>/g,"\n")),c.test(a)&&(a=Ext.util.Format.htmlDecode(a),a=Ext.util.Format.stripTags(a)),d.test(a)&&(a=a.replace(d," ")),b.test(a)&&(a=a.replace(/\"/g,'""'),a=Ext.String.format('"{0}"',a)),a},getCellData:function(a,b,c,d,e){if(!a||!a.dataIndex)return null;var f=null;if(a.relativeType||(f=b[a.dataIndex]),"Feature"===a.relativeType){var g=b[this.getFeatureName()].ObjectID;f=d[g]&&d[g][a.dataIndex]}if("Initiative"===a.relativeType){var g=b[this.getFeatureName()].ObjectID,h=d[g],i=h&&h.Parent&&h.Parent.ObjectID||null,j=i&&c[i];f=j&&j[a.dataIndex]}if("TestCases"===a.relativeType){var k=e[b.ObjectID];k&&k.length>0&&(f=_.pluck(k,a.dataIndex),f=f.join("\n"))}return Ext.isObject(f)&&(f=f._refObjectName||f.Name),this.scrubCell(f)},getInitiativeFetch:function(){var a=["ObjectID","FormattedID"];return Ext.Array.each(this.extractFields,function(b){"Initiative"===b.relativeType&&a.push(b.dataIndex)}),a},getFeatureFetch:function(){var a=["ObjectID","FormattedID","Parent"];return Ext.Array.each(this.extractFields,function(b){"Feature"===b.relativeType&&a.push(b.dataIndex)}),a},getStoryFetch:function(){var a=["ObjectID","FormattedID","TestCases","Defects","PortfolioItem",this.getFeatureName()];return Ext.Array.each(this.extractFields,function(b){"HierarchicalRequirement"===b.relativeType&&a.push(b.dataIndex)}),a},getDefectFetch:function(){var a=["ObjectID","FormattedID","TestCase","Requirement"];return Ext.Array.each(this.extractFields,function(b){"Defect"===b.relativeType&&a.push(b.dataIndex)}),a},getTestCaseFetch:function(){var a=["ObjectID","FormattedID","Name","Defects","LastVerdict","WorkProduct"];return Ext.Array.each(this.extractFields,function(b){"TestCases"===b.relativeType&&a.push(b.dataIndex)}),a},getFieldsFor:function(a){var b=Ext.Array.filter(this.extractFields,function(b){return b.relativeType===a});return b},getFeatureName:function(){return this.portfolioItemTypes[0].replace("PortfolioItem/","")},getInitiativeConfig:function(){var a=[];if(0===this.initiativeObjectIDs.length)a=this.initiativeFilter;else{for(var b=0;b<this.initiativeObjectIDs.length;b++)a.push({property:"ObjectID",value:this.initiativeObjectIDs[b]});0===a.length&&a.push({property:"ObjectID",value:0}),a&&a.length>1&&(a=Rally.data.wsapi.Filter.or(a))}return{model:this.portfolioItemTypes[1],fetch:this.getInitiativeFetch(),filters:a}},getFeatureConfig:function(a){for(var b=[],c=0;c<a.length;c++)b.push({property:"Parent.ObjectID",value:a[c].get("ObjectID")});return 0===b.length&&b.push({property:"ObjectID",value:0}),b&&b.length>1&&(b=Rally.data.wsapi.Filter.or(b)),{model:this.portfolioItemTypes[0],fetch:this.getFeatureFetch(),filters:b,limit:1/0,pageSize:2e3,enablePostGet:!0}},getStoryConfig:function(a){for(var b=[],c=this.getFeatureName(),d=0;d<a.length;d++)b.push({property:c+".ObjectID",value:a[d].get("ObjectID")});return 0===b.length&&b.push({property:"ObjectID",value:0}),b&&b.length>1&&(b=Rally.data.wsapi.Filter.or(b)),{model:"HierarchicalRequirement",fetch:this.getStoryFetch(),filters:b,limit:1/0,pageSize:2e3,enablePostGet:!0}},getTestCaseConfig:function(a){for(var b=[],c=0;c<a.length;c++)a[c].get("TestCases")&&a[c].get("TestCases").Count>0&&b.push({property:"WorkProduct.ObjectID",value:a[c].get("ObjectID")});return 0===b.length&&b.push({property:"ObjectID",value:0}),b&&b.length>1&&(b=Rally.data.wsapi.Filter.or(b)),{model:"TestCase",fetch:this.getTestCaseFetch(),filters:b,limit:1/0,pageSize:2e3,enablePostGet:!0}},getDefectConfig:function(a,b){for(var c=[],d=0;d<a.length;d++)a[d].get("Defects")&&a[d].get("Defects").Count>0&&c.push({property:"TestCase.ObjectID",value:a[d].get("ObjectID")});for(var d=0;d<b.length;d++)b[d].get("Defects")&&b[d].get("Defects").Count>0&&c.push({property:"Requirement.ObjectID",value:b[d].get("ObjectID")});return 0===c.length&&c.push({property:"ObjectID",value:0}),c&&c.length>1&&(c=Rally.data.wsapi.Filter.or(c)),{model:"Defect",fetch:this.getDefectFetch(),filters:c,limit:1/0,pageSize:2e3,enablePostGet:!0}}}),Ext.define("RallyTechServices.RequirementsTracabilityMatrix.utils.exporter",{mixins:{observable:"Ext.util.Observable"},constructor:function(a){this.mixins.observable.constructor.call(this,a),this.exportConfig=a.exportConfig},doExport:function(){this.initiatives=[],this.features=[],this.stories=[],this.testCases=[],this.fetchInitiatives().then({success:this.fetchFeatures,failure:this.showErrorNotification,scope:this}).then({success:this.fetchStories,failure:this.showErrorNotification,scope:this}).then({success:this.fetchTestCases,failure:this.showErrorNotification,scope:this}).then({success:this.fetchDefects,failure:this.showErrorNotification,scope:this}).then({success:this.processCSV,failure:this.showErrorNotification,scope:this})},showErrorNotification:function(a){this.fireEvent("doexporterror",a)},fetchInitiatives:function(){return this._fetchWsapiRecords(this.exportConfig.getInitiativeConfig())},fetchFeatures:function(a){return this.initiatives=a,this.fireEvent("doexportupdate","Fetching Portfolio Items..."),a&&0!=a.length?this._fetchWsapiRecords(this.exportConfig.getFeatureConfig(a)):[]},fetchStories:function(a){return this.features=a,this.fireEvent("doexportupdate","Fetching User Stories..."),a&&0!=a.length?this._fetchWsapiRecords(this.exportConfig.getStoryConfig(a)):[]},fetchTestCases:function(a){return this.stories=a,this.fireEvent("doexportupdate",Ext.String.format("Fetching Test Cases for {0} User Stories...",a.length)),a&&0!=a.length?this._fetchWsapiRecords(this.exportConfig.getTestCaseConfig(a)):[]},fetchDefects:function(a){return this.testCases=a,this.fireEvent("doexportupdate",Ext.String.format("Fetching Defects for {0} Test Cases...",a.length)),a&&0!=a.length?this._fetchWsapiRecords(this.exportConfig.getDefectConfig(a,this.stories)):[]},processCSV:function(a){this.defects=a;var b=this.exportConfig.transformRecordsToExtract(this.initiatives,this.features,this.stories,this.testCases,this.defects);this.fireEvent("doexportcomplete",b)},_fetchWsapiRecords:function(a){var b=Ext.create("Deft.Deferred");return a.limit||(a.limit="Infinity"),Ext.create("Rally.data.wsapi.Store",a).load({callback:function(c,d){d.wasSuccessful()?b.resolve(c):b.reject(Ext.String.format("Error loading [{0}] records: {1}",a.model,d&&d.error&&d.error.errors.join("<br/>")))}}),b.promise}}),Ext.override(Rally.ui.picker.FieldPicker,{setValue:function(a){if(this.store)if(Ext.isString(a)){var b=_.values(this.models),c=_(a.split(",")).map(function(a){var c=_(b).invoke("getField",a).compact().value(),d=_.filter(c,{custom:!1}),e=_.difference(c,d);return 0===d.length?e:d}).flatten().compact().pluck("name").unique().value();this.callParent([c.join(",")])}else this.callParent(arguments);else this._loadStore(),this.on("fieldpickerstoreloaded",function(){this.setValue(a)},this)},getState:function(){var a="name";return{value:Ext.Array.map(this.getValue(),function(b){return b.get(a)}).join(",")}},applyState:function(a){a&&a.value&&this.setValue(a.value)}}),Ext.define("TSRTM2",{extend:"Rally.app.App",componentCls:"app",logger:new Rally.technicalservices.Logger,defaults:{margin:10},items:[{xtype:"container",itemId:"selector_box",layout:"hbox",defaults:{margin:5}},{xtype:"container",itemId:"display_box"}],integrationHeaders:{name:"TSRTM2"},alwaysSelectedValues:["FormattedID","Name"],launch:function(){var a=["PortfolioItem/Initiative"];this._addSelectors(this.down("#selector_box")),Ext.create("Rally.data.wsapi.TreeStoreBuilder").build({models:a,enableHierarchy:!1}).then({scope:this,success:function(b){this._displayGrid(b,a)},failure:function(a){}})},_shouldShowField:function(a){if(blacklist_fields=["Workspace","Subscription","ObjectUUID","ObjectID","VersionId","Recycled","Rank","DragAndDropRank"],a.hidden)return!1;if(Ext.Array.contains(blacklist_fields,a.name))return!1;if(!a.attributeDefinition)return!1;var b=a.attributeDefinition;return"COLLECTION"==b.AttributeType?!1:!0},_addSelectors:function(a){var b=150;this.initiativeFieldPicker=a.add({xtype:"rallyfieldpicker",modelTypes:["PortfolioItem/Initiative"],width:b,stateful:!0,autoExpand:!1,stateEvents:["select","change"],stateId:this.getContext().getScopedStateId("initiative-fields"),fieldLabel:"Initiative Fields",alwaysExpanded:!1,labelAlign:"top",_shouldShowField:this._shouldShowField,alwaysSelectedValues:this.alwaysSelectedValues}),this.featureFieldPicker=a.add({xtype:"rallyfieldpicker",alwaysExpanded:!1,modelTypes:["PortfolioItem/Feature"],width:b,fieldLabel:"Feature Fields",stateful:!0,stateEvents:["select","change"],stateId:this.getContext().getScopedStateId("feature-fields"),labelAlign:"top",_shouldShowField:this._shouldShowField,alwaysSelectedValues:this.alwaysSelectedValues}),this.storyFieldPicker=a.add({xtype:"rallyfieldpicker",alwaysExpanded:!1,modelTypes:["HierarchicalRequirement"],width:b,fieldLabel:"Story Fields",stateful:!0,stateEvents:["select","change"],stateId:this.getContext().getScopedStateId("story-fields"),labelAlign:"top",_shouldShowField:this._shouldShowField,alwaysSelectedValues:this.alwaysSelectedValues}),this.testCaseFieldPicker=a.add({xtype:"rallyfieldpicker",alwaysExpanded:!1,modelTypes:["TestCase"],width:b,fieldLabel:"TestCase Fields",stateful:!0,stateEvents:["select","change"],stateId:this.getContext().getScopedStateId("testcase-fields"),labelAlign:"top",_shouldShowField:this._shouldShowField,alwaysSelectedValues:this.alwaysSelectedValues}),this.defectFieldPicker=a.add({xtype:"rallyfieldpicker",alwaysExpanded:!1,modelTypes:["Defect"],width:b,fieldLabel:"Defect Fields",stateful:!0,stateEvents:["select","change"],stateId:this.getContext().getScopedStateId("defect-fields"),labelAlign:"top",_shouldShowField:this._shouldShowField,alwaysSelectedValues:this.alwaysSelectedValues}),a.add({xtype:"container",flex:1}),a.add({xtype:"rallybutton",iconCls:"icon-export",itemId:"btExport",cls:"rly-small primary",disabled:!1,margin:5,listeners:{scope:this,click:this._exportData}})},_loadWsapiRecords:function(a){var b=Ext.create("Deft.Deferred"),c=this,d={model:"Defect",fetch:["ObjectID"]};return this.logger.log("Starting load:",a.model),Ext.create("Rally.data.wsapi.Store",Ext.Object.merge(d,a)).load({callback:function(a,d,e){e?b.resolve(a):(c.logger.log("Failed: ",d),b.reject("Problem loading: "+d.error.errors.join(". ")))}}),b.promise},_displayGrid:function(a,b){var c=this.getContext();this.down("#display_box").add({xtype:"rallygridboard",context:c,toggleState:"grid",modelNames:b,stateful:!1,plugins:[{ptype:"rallygridboardinlinefiltercontrol",inlineFilterButtonConfig:{stateful:!0,stateId:c.getScopedStateId("rtm2-filters"),modelNames:b,inlineFilterPanelConfig:{quickFilterPanelConfig:{defaultFields:["ArtifactSearch","Owner"]}}}}],cardBoardConfig:{attribute:"State"},gridConfig:{columnCfgs:["FormattedID","Name","Owner"],store:a},height:this.getHeight()})},_getExportColumns:function(){var a=this,b=[],c=Ext.Array.merge([],a.initiativeFieldPicker.getValue());return Ext.Array.each(c,function(a){b.push({relativeType:"Initiative",dataIndex:a.get("name"),text:"Initiative "+a.get("displayName")})}),c=Ext.Array.merge([],a.featureFieldPicker.getValue()),Ext.Array.each(c,function(a){b.push({relativeType:"Feature",dataIndex:a.get("name"),text:"Feature "+a.get("displayName")})}),c=Ext.Array.merge([],a.storyFieldPicker.getValue()),Ext.Array.each(c,function(a){b.push({relativeType:"HierarchicalRequirement",dataIndex:a.get("name"),text:"Story "+a.get("displayName")})}),c=Ext.Array.merge([],a.testCaseFieldPicker.getValue()),Ext.Array.each(c,function(a){b.push({relativeType:"TestCase",dataIndex:a.get("name"),text:"TestCase "+a.get("displayName")})}),c=Ext.Array.merge([],a.defectFieldPicker.getValue()),Ext.Array.each(c,function(a){b.push({relativeType:"Defect",dataIndex:a.get("name"),text:"Defect "+a.get("displayName")})}),b},_getExportConfig:function(a){var b=this.down("rallygridboard");return Ext.create("RallyTechServices.RequirementsTracabilityMatrix.utils.exportConfiguration",{portfolioItemTypes:["PortfolioItem/Feature","PortfolioItem/Initiative"],initiativeObjectIDs:a,initiativeFilter:b.getGridOrBoard().getStore().filters&&b.getGridOrBoard().getStore().filters.items,extractFields:this._getExportColumns()})},_exportData:function(){var a=this.down("rallygridboard").getGridOrBoard().getSelectionModel().getSelection();selected_oids=[],Ext.each(a,function(a){selected_oids.push(a.data.ObjectID)});var b=this._getExportConfig(selected_oids);this.logger.log("_exportData",b);var c=Ext.create("RallyTechServices.RequirementsTracabilityMatrix.utils.exporter",{exportConfig:b,listeners:{scope:this,doexporterror:this.showErrorNotification,doexportupdate:this.showUpdateNotification,doexportcomplete:this.saveExportFile}});c.doExport()},saveExportFile:function(a){Rally.ui.notify.Notifier.hide({});var b=Ext.String.format("tracability-matrix-{0}.csv",Rally.util.DateTime.format(new Date,"Y-m-d-h-i-s"));this.saveCSVToFile(a,b)},showErrorNotification:function(a){Rally.ui.notify.Notifier.hide(),this.logger.log("showErrorNotification",a),Rally.ui.notify.Notifier.showError({message:a})},showUpdateNotification:function(a){this.logger.log("showUpdateNotification",a),Rally.ui.notify.Notifier.show({message:a})},saveCSVToFile:function(a,b,c){void 0===c&&(c={type:"text/csv;charset=utf-8"}),this.saveAs(a,b,c)},saveAs:function(a,b){if(Ext.isIE9m)return void Rally.ui.notify.Notifier.showWarning({message:"Export is not supported for IE9 and below."});var c=null;try{c=new Blob([a],{type:"text/plain"})}catch(d){window.BlobBuilder=window.BlobBuilder||window.WebKitBlobBuilder||window.MozBlobBuilder||window.MSBlobBuilder,window.BlobBuilder&&"TypeError"==d.name&&(bb=new BlobBuilder,bb.append([a]),c=bb.getBlob("text/plain"))}if(!c)return void Rally.ui.notify.Notifier.showWarning({message:"Export is not supported for this browser."});var e=b;if(Ext.isIE10p)return void window.navigator.msSaveOrOpenBlob(c,e);var f=this.createObjectURL(c);if(f){var g=document.createElement("a");"download"in g?g.download=e:g.target="_blank",g.innerHTML="Download File",g.href=f,Ext.isChrome||(g.onclick=this.destroyClickedElement,g.style.display="none",document.body.appendChild(g)),g.click()}else Rally.ui.notify.Notifier.showError({message:"Export is not supported "})},createObjectURL:function(a){return window.URL&&window.URL.createObjectURL?window.URL.createObjectURL(a):window.webkitURL?window.webkitURL.createObjectURL(a):null},getOptions:function(){return[{text:"About...",handler:this._launchInfo,scope:this}]},_launchInfo:function(){this.about_dialog&&this.about_dialog.destroy(),this.about_dialog=Ext.create("Rally.technicalservices.InfoLink",{})},isExternal:function(){return"undefined"==typeof this.getAppId()}});
            
               Rally.launchApp('TSRTM2', {
                   name: 'TS-RTM2'
               });
        });
    </script>
    
    <style type="text/css">

.app {
}
.tsinfolink {
    position:absolute;
    right:0px;
    width: 14px;
    height: 14px;
    border-radius: 7px;
    text-align: center;
    color: white;
    background: #C0C0C0;
    border-style: solid;
    border-width: 1px;
    margin-top: 25px;
    margin-right: 5px;
    cursor: pointer;
}
    </style>

</head>
<body></body>
</html>